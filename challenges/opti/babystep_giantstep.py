#!/usr/bin/python3
# -*- coding: utf-8 -*-

from math import ceil, sqrt


def BSGS(G, A, identity, order):
    """Baby-step Giant-step algorithm for computing discrete logarithms
    in an elliptic curve.

        INPUT:
        - `G` must be an element
        - `A` must be an element in the subgroup generated by `G`

        OUTPUT:
        - `n` such that `n*G = A`
    """

    dic = {}
    m = ceil(sqrt(order))

    # Baby-step
    Gj = identity
    for j in range(m):
        dic[Gj] = j
        Gj = Gj + G

    # Giant-step
    C = m * (-G)
    Ci = A
    for i in range(m):
        try:
            j = dic[Ci]
            return m * i + j
        except:
            Ci += C